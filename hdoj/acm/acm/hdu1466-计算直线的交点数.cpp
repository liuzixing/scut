//将n 条直线排成一个序列，直线2和直线1最多只有一个交点，直线3和直线1，2最多有两个交点，。。。。。。，直线n 和其他n-1条直线最多有n-1个交点。由此得出n条直线互不平行且无三线共点的最多交点数：
//
//	Max = 1 +2 +。。。。（n-1）=n(n-1)/2;
//
//但本题不这么简单，这些直线有多少种不同的交点数？
//
//
//	容易列举出i=1,2,3的情况如下图所示，来分析n=4的情况：
//
//	1.       四条直线全部平行，无交点
//
//	2.       其中三条平行，交点数: (n-1)*1 +0=3；
//
//	3.       其中两条平行，而另外两条直线的交点既可能平行也可能相交，因此交点数据分别为：
//
//	(n-2)*2+0=4
//
//	(n-2)*2 +1=5
//
//	4. 四条直线互不平行， 交点数为(n-3)*3+3条直线的相交情况：
//
//	(n-3)*3+0=3 
//	(n-3)*3+2=5 
//	(n-3)*3+3=6
//
//	即n=4时，有0, 3, 4, 5, 6个不同的交点数.所有有5种可能
//
//	从上述n=4的分析过程中，发现：
//
//	M条直线的交点方案数=(m-r)条平行线与r条直线交叉的交点数+r条直线本身的交点方案=
//
//	(m-r)*r +r条
//

#include <iostream>
#include <cstdio>

using namespace std;

int n;
bool f[21][191];
int main(){
	for (int i = 1;i < 21;i++)
		f[i][0] = 1;
	for (int i = 2;i < 21;i++)
		for (int j = i - 1;j > 0 ;j--)
			for (int k = 0;k < 191;k++)
				if (f[i - j][k])
					f[i][(i - j) * j + k] = 1;
	while (scanf("%d",&n) != EOF){
		printf("0");
		for (int i = 1;i < 191;i++)
			if (f[n][i])
				printf(" %d",i);
		puts("");
	}
}